// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_types/pparameters.proto

#ifndef PROTOBUF_INCLUDED_protobuf_5ftypes_2fpparameters_2eproto
#define PROTOBUF_INCLUDED_protobuf_5ftypes_2fpparameters_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protobuf_types/pbasic.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_5ftypes_2fpparameters_2eproto 

namespace protobuf_protobuf_5ftypes_2fpparameters_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protobuf_5ftypes_2fpparameters_2eproto
namespace top {
namespace tvm_engine {
namespace parameters {
class PCallArgs;
class PCallArgsDefaultTypeInternal;
extern PCallArgsDefaultTypeInternal _PCallArgs_default_instance_;
class PReturnResult;
class PReturnResultDefaultTypeInternal;
extern PReturnResultDefaultTypeInternal _PReturnResult_default_instance_;
class PReturnResult_PLog;
class PReturnResult_PLogDefaultTypeInternal;
extern PReturnResult_PLogDefaultTypeInternal _PReturnResult_PLog_default_instance_;
class PReturnResult_PU256;
class PReturnResult_PU256DefaultTypeInternal;
extern PReturnResult_PU256DefaultTypeInternal _PReturnResult_PU256_default_instance_;
}  // namespace parameters
}  // namespace tvm_engine
}  // namespace top
namespace google {
namespace protobuf {
template<> ::top::tvm_engine::parameters::PCallArgs* Arena::CreateMaybeMessage<::top::tvm_engine::parameters::PCallArgs>(Arena*);
template<> ::top::tvm_engine::parameters::PReturnResult* Arena::CreateMaybeMessage<::top::tvm_engine::parameters::PReturnResult>(Arena*);
template<> ::top::tvm_engine::parameters::PReturnResult_PLog* Arena::CreateMaybeMessage<::top::tvm_engine::parameters::PReturnResult_PLog>(Arena*);
template<> ::top::tvm_engine::parameters::PReturnResult_PU256* Arena::CreateMaybeMessage<::top::tvm_engine::parameters::PReturnResult_PU256>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace top {
namespace tvm_engine {
namespace parameters {

// ===================================================================

class PReturnResult_PU256 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.tvm_engine.parameters.PReturnResult.PU256) */ {
 public:
  PReturnResult_PU256();
  virtual ~PReturnResult_PU256();

  PReturnResult_PU256(const PReturnResult_PU256& from);

  inline PReturnResult_PU256& operator=(const PReturnResult_PU256& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PReturnResult_PU256(PReturnResult_PU256&& from) noexcept
    : PReturnResult_PU256() {
    *this = ::std::move(from);
  }

  inline PReturnResult_PU256& operator=(PReturnResult_PU256&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PReturnResult_PU256& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PReturnResult_PU256* internal_default_instance() {
    return reinterpret_cast<const PReturnResult_PU256*>(
               &_PReturnResult_PU256_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PReturnResult_PU256* other);
  friend void swap(PReturnResult_PU256& a, PReturnResult_PU256& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PReturnResult_PU256* New() const final {
    return CreateMaybeMessage<PReturnResult_PU256>(NULL);
  }

  PReturnResult_PU256* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PReturnResult_PU256>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PReturnResult_PU256& from);
  void MergeFrom(const PReturnResult_PU256& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PReturnResult_PU256* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:top.tvm_engine.parameters.PReturnResult.PU256)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5ftypes_2fpparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PReturnResult_PLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.tvm_engine.parameters.PReturnResult.PLog) */ {
 public:
  PReturnResult_PLog();
  virtual ~PReturnResult_PLog();

  PReturnResult_PLog(const PReturnResult_PLog& from);

  inline PReturnResult_PLog& operator=(const PReturnResult_PLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PReturnResult_PLog(PReturnResult_PLog&& from) noexcept
    : PReturnResult_PLog() {
    *this = ::std::move(from);
  }

  inline PReturnResult_PLog& operator=(PReturnResult_PLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PReturnResult_PLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PReturnResult_PLog* internal_default_instance() {
    return reinterpret_cast<const PReturnResult_PLog*>(
               &_PReturnResult_PLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PReturnResult_PLog* other);
  friend void swap(PReturnResult_PLog& a, PReturnResult_PLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PReturnResult_PLog* New() const final {
    return CreateMaybeMessage<PReturnResult_PLog>(NULL);
  }

  PReturnResult_PLog* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PReturnResult_PLog>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PReturnResult_PLog& from);
  void MergeFrom(const PReturnResult_PLog& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PReturnResult_PLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .top.tvm_engine.parameters.PReturnResult.PU256 topics = 2;
  int topics_size() const;
  void clear_topics();
  static const int kTopicsFieldNumber = 2;
  ::top::tvm_engine::parameters::PReturnResult_PU256* mutable_topics(int index);
  ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PU256 >*
      mutable_topics();
  const ::top::tvm_engine::parameters::PReturnResult_PU256& topics(int index) const;
  ::top::tvm_engine::parameters::PReturnResult_PU256* add_topics();
  const ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PU256 >&
      topics() const;

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .top.tvm_engine.basic.PAddress address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  private:
  const ::top::tvm_engine::basic::PAddress& _internal_address() const;
  public:
  const ::top::tvm_engine::basic::PAddress& address() const;
  ::top::tvm_engine::basic::PAddress* release_address();
  ::top::tvm_engine::basic::PAddress* mutable_address();
  void set_allocated_address(::top::tvm_engine::basic::PAddress* address);

  // @@protoc_insertion_point(class_scope:top.tvm_engine.parameters.PReturnResult.PLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PU256 > topics_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::top::tvm_engine::basic::PAddress* address_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5ftypes_2fpparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PReturnResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.tvm_engine.parameters.PReturnResult) */ {
 public:
  PReturnResult();
  virtual ~PReturnResult();

  PReturnResult(const PReturnResult& from);

  inline PReturnResult& operator=(const PReturnResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PReturnResult(PReturnResult&& from) noexcept
    : PReturnResult() {
    *this = ::std::move(from);
  }

  inline PReturnResult& operator=(PReturnResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PReturnResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PReturnResult* internal_default_instance() {
    return reinterpret_cast<const PReturnResult*>(
               &_PReturnResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PReturnResult* other);
  friend void swap(PReturnResult& a, PReturnResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PReturnResult* New() const final {
    return CreateMaybeMessage<PReturnResult>(NULL);
  }

  PReturnResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PReturnResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PReturnResult& from);
  void MergeFrom(const PReturnResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PReturnResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PReturnResult_PU256 PU256;
  typedef PReturnResult_PLog PLog;

  // accessors -------------------------------------------------------

  // repeated .top.tvm_engine.parameters.PReturnResult.PLog logs = 4;
  int logs_size() const;
  void clear_logs();
  static const int kLogsFieldNumber = 4;
  ::top::tvm_engine::parameters::PReturnResult_PLog* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PLog >*
      mutable_logs();
  const ::top::tvm_engine::parameters::PReturnResult_PLog& logs(int index) const;
  ::top::tvm_engine::parameters::PReturnResult_PLog* add_logs();
  const ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PLog >&
      logs() const;

  // bytes status_data = 2;
  void clear_status_data();
  static const int kStatusDataFieldNumber = 2;
  const ::std::string& status_data() const;
  void set_status_data(const ::std::string& value);
  #if LANG_CXX11
  void set_status_data(::std::string&& value);
  #endif
  void set_status_data(const char* value);
  void set_status_data(const void* value, size_t size);
  ::std::string* mutable_status_data();
  ::std::string* release_status_data();
  void set_allocated_status_data(::std::string* status_data);

  // uint64 gas_used = 3;
  void clear_gas_used();
  static const int kGasUsedFieldNumber = 3;
  ::google::protobuf::uint64 gas_used() const;
  void set_gas_used(::google::protobuf::uint64 value);

  // uint32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:top.tvm_engine.parameters.PReturnResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PLog > logs_;
  ::google::protobuf::internal::ArenaStringPtr status_data_;
  ::google::protobuf::uint64 gas_used_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5ftypes_2fpparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PCallArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.tvm_engine.parameters.PCallArgs) */ {
 public:
  PCallArgs();
  virtual ~PCallArgs();

  PCallArgs(const PCallArgs& from);

  inline PCallArgs& operator=(const PCallArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PCallArgs(PCallArgs&& from) noexcept
    : PCallArgs() {
    *this = ::std::move(from);
  }

  inline PCallArgs& operator=(PCallArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PCallArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PCallArgs* internal_default_instance() {
    return reinterpret_cast<const PCallArgs*>(
               &_PCallArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PCallArgs* other);
  friend void swap(PCallArgs& a, PCallArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PCallArgs* New() const final {
    return CreateMaybeMessage<PCallArgs>(NULL);
  }

  PCallArgs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PCallArgs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PCallArgs& from);
  void MergeFrom(const PCallArgs& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PCallArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes input = 4;
  void clear_input();
  static const int kInputFieldNumber = 4;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  #if LANG_CXX11
  void set_input(::std::string&& value);
  #endif
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // .top.tvm_engine.basic.PAddress sender_address = 1;
  bool has_sender_address() const;
  void clear_sender_address();
  static const int kSenderAddressFieldNumber = 1;
  private:
  const ::top::tvm_engine::basic::PAddress& _internal_sender_address() const;
  public:
  const ::top::tvm_engine::basic::PAddress& sender_address() const;
  ::top::tvm_engine::basic::PAddress* release_sender_address();
  ::top::tvm_engine::basic::PAddress* mutable_sender_address();
  void set_allocated_sender_address(::top::tvm_engine::basic::PAddress* sender_address);

  // .top.tvm_engine.basic.PAddress recver_address = 2;
  bool has_recver_address() const;
  void clear_recver_address();
  static const int kRecverAddressFieldNumber = 2;
  private:
  const ::top::tvm_engine::basic::PAddress& _internal_recver_address() const;
  public:
  const ::top::tvm_engine::basic::PAddress& recver_address() const;
  ::top::tvm_engine::basic::PAddress* release_recver_address();
  ::top::tvm_engine::basic::PAddress* mutable_recver_address();
  void set_allocated_recver_address(::top::tvm_engine::basic::PAddress* recver_address);

  // uint64 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // uint64 gas_limit = 5;
  void clear_gas_limit();
  static const int kGasLimitFieldNumber = 5;
  ::google::protobuf::uint64 gas_limit() const;
  void set_gas_limit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:top.tvm_engine.parameters.PCallArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  ::top::tvm_engine::basic::PAddress* sender_address_;
  ::top::tvm_engine::basic::PAddress* recver_address_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint64 gas_limit_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5ftypes_2fpparameters_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PReturnResult_PU256

// bytes data = 1;
inline void PReturnResult_PU256::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PReturnResult_PU256::data() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.PU256.data)
  return data_.GetNoArena();
}
inline void PReturnResult_PU256::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PReturnResult.PU256.data)
}
#if LANG_CXX11
inline void PReturnResult_PU256::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.tvm_engine.parameters.PReturnResult.PU256.data)
}
#endif
inline void PReturnResult_PU256::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.tvm_engine.parameters.PReturnResult.PU256.data)
}
inline void PReturnResult_PU256::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.tvm_engine.parameters.PReturnResult.PU256.data)
}
inline ::std::string* PReturnResult_PU256::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PReturnResult.PU256.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PReturnResult_PU256::release_data() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PReturnResult.PU256.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PReturnResult_PU256::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PReturnResult.PU256.data)
}

// -------------------------------------------------------------------

// PReturnResult_PLog

// .top.tvm_engine.basic.PAddress address = 1;
inline bool PReturnResult_PLog::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::top::tvm_engine::basic::PAddress& PReturnResult_PLog::_internal_address() const {
  return *address_;
}
inline const ::top::tvm_engine::basic::PAddress& PReturnResult_PLog::address() const {
  const ::top::tvm_engine::basic::PAddress* p = address_;
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.PLog.address)
  return p != NULL ? *p : *reinterpret_cast<const ::top::tvm_engine::basic::PAddress*>(
      &::top::tvm_engine::basic::_PAddress_default_instance_);
}
inline ::top::tvm_engine::basic::PAddress* PReturnResult_PLog::release_address() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PReturnResult.PLog.address)
  
  ::top::tvm_engine::basic::PAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::top::tvm_engine::basic::PAddress* PReturnResult_PLog::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::top::tvm_engine::basic::PAddress>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PReturnResult.PLog.address)
  return address_;
}
inline void PReturnResult_PLog::set_allocated_address(::top::tvm_engine::basic::PAddress* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PReturnResult.PLog.address)
}

// repeated .top.tvm_engine.parameters.PReturnResult.PU256 topics = 2;
inline int PReturnResult_PLog::topics_size() const {
  return topics_.size();
}
inline void PReturnResult_PLog::clear_topics() {
  topics_.Clear();
}
inline ::top::tvm_engine::parameters::PReturnResult_PU256* PReturnResult_PLog::mutable_topics(int index) {
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PReturnResult.PLog.topics)
  return topics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PU256 >*
PReturnResult_PLog::mutable_topics() {
  // @@protoc_insertion_point(field_mutable_list:top.tvm_engine.parameters.PReturnResult.PLog.topics)
  return &topics_;
}
inline const ::top::tvm_engine::parameters::PReturnResult_PU256& PReturnResult_PLog::topics(int index) const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.PLog.topics)
  return topics_.Get(index);
}
inline ::top::tvm_engine::parameters::PReturnResult_PU256* PReturnResult_PLog::add_topics() {
  // @@protoc_insertion_point(field_add:top.tvm_engine.parameters.PReturnResult.PLog.topics)
  return topics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PU256 >&
PReturnResult_PLog::topics() const {
  // @@protoc_insertion_point(field_list:top.tvm_engine.parameters.PReturnResult.PLog.topics)
  return topics_;
}

// bytes data = 3;
inline void PReturnResult_PLog::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PReturnResult_PLog::data() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.PLog.data)
  return data_.GetNoArena();
}
inline void PReturnResult_PLog::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PReturnResult.PLog.data)
}
#if LANG_CXX11
inline void PReturnResult_PLog::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.tvm_engine.parameters.PReturnResult.PLog.data)
}
#endif
inline void PReturnResult_PLog::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.tvm_engine.parameters.PReturnResult.PLog.data)
}
inline void PReturnResult_PLog::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.tvm_engine.parameters.PReturnResult.PLog.data)
}
inline ::std::string* PReturnResult_PLog::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PReturnResult.PLog.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PReturnResult_PLog::release_data() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PReturnResult.PLog.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PReturnResult_PLog::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PReturnResult.PLog.data)
}

// -------------------------------------------------------------------

// PReturnResult

// uint32 status = 1;
inline void PReturnResult::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 PReturnResult::status() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.status)
  return status_;
}
inline void PReturnResult::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PReturnResult.status)
}

// bytes status_data = 2;
inline void PReturnResult::clear_status_data() {
  status_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PReturnResult::status_data() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.status_data)
  return status_data_.GetNoArena();
}
inline void PReturnResult::set_status_data(const ::std::string& value) {
  
  status_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PReturnResult.status_data)
}
#if LANG_CXX11
inline void PReturnResult::set_status_data(::std::string&& value) {
  
  status_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.tvm_engine.parameters.PReturnResult.status_data)
}
#endif
inline void PReturnResult::set_status_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.tvm_engine.parameters.PReturnResult.status_data)
}
inline void PReturnResult::set_status_data(const void* value, size_t size) {
  
  status_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.tvm_engine.parameters.PReturnResult.status_data)
}
inline ::std::string* PReturnResult::mutable_status_data() {
  
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PReturnResult.status_data)
  return status_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PReturnResult::release_status_data() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PReturnResult.status_data)
  
  return status_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PReturnResult::set_allocated_status_data(::std::string* status_data) {
  if (status_data != NULL) {
    
  } else {
    
  }
  status_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_data);
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PReturnResult.status_data)
}

// uint64 gas_used = 3;
inline void PReturnResult::clear_gas_used() {
  gas_used_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PReturnResult::gas_used() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.gas_used)
  return gas_used_;
}
inline void PReturnResult::set_gas_used(::google::protobuf::uint64 value) {
  
  gas_used_ = value;
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PReturnResult.gas_used)
}

// repeated .top.tvm_engine.parameters.PReturnResult.PLog logs = 4;
inline int PReturnResult::logs_size() const {
  return logs_.size();
}
inline void PReturnResult::clear_logs() {
  logs_.Clear();
}
inline ::top::tvm_engine::parameters::PReturnResult_PLog* PReturnResult::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PReturnResult.logs)
  return logs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PLog >*
PReturnResult::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:top.tvm_engine.parameters.PReturnResult.logs)
  return &logs_;
}
inline const ::top::tvm_engine::parameters::PReturnResult_PLog& PReturnResult::logs(int index) const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PReturnResult.logs)
  return logs_.Get(index);
}
inline ::top::tvm_engine::parameters::PReturnResult_PLog* PReturnResult::add_logs() {
  // @@protoc_insertion_point(field_add:top.tvm_engine.parameters.PReturnResult.logs)
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::tvm_engine::parameters::PReturnResult_PLog >&
PReturnResult::logs() const {
  // @@protoc_insertion_point(field_list:top.tvm_engine.parameters.PReturnResult.logs)
  return logs_;
}

// -------------------------------------------------------------------

// PCallArgs

// .top.tvm_engine.basic.PAddress sender_address = 1;
inline bool PCallArgs::has_sender_address() const {
  return this != internal_default_instance() && sender_address_ != NULL;
}
inline const ::top::tvm_engine::basic::PAddress& PCallArgs::_internal_sender_address() const {
  return *sender_address_;
}
inline const ::top::tvm_engine::basic::PAddress& PCallArgs::sender_address() const {
  const ::top::tvm_engine::basic::PAddress* p = sender_address_;
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PCallArgs.sender_address)
  return p != NULL ? *p : *reinterpret_cast<const ::top::tvm_engine::basic::PAddress*>(
      &::top::tvm_engine::basic::_PAddress_default_instance_);
}
inline ::top::tvm_engine::basic::PAddress* PCallArgs::release_sender_address() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PCallArgs.sender_address)
  
  ::top::tvm_engine::basic::PAddress* temp = sender_address_;
  sender_address_ = NULL;
  return temp;
}
inline ::top::tvm_engine::basic::PAddress* PCallArgs::mutable_sender_address() {
  
  if (sender_address_ == NULL) {
    auto* p = CreateMaybeMessage<::top::tvm_engine::basic::PAddress>(GetArenaNoVirtual());
    sender_address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PCallArgs.sender_address)
  return sender_address_;
}
inline void PCallArgs::set_allocated_sender_address(::top::tvm_engine::basic::PAddress* sender_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sender_address_);
  }
  if (sender_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sender_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sender_address, submessage_arena);
    }
    
  } else {
    
  }
  sender_address_ = sender_address;
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PCallArgs.sender_address)
}

// .top.tvm_engine.basic.PAddress recver_address = 2;
inline bool PCallArgs::has_recver_address() const {
  return this != internal_default_instance() && recver_address_ != NULL;
}
inline const ::top::tvm_engine::basic::PAddress& PCallArgs::_internal_recver_address() const {
  return *recver_address_;
}
inline const ::top::tvm_engine::basic::PAddress& PCallArgs::recver_address() const {
  const ::top::tvm_engine::basic::PAddress* p = recver_address_;
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PCallArgs.recver_address)
  return p != NULL ? *p : *reinterpret_cast<const ::top::tvm_engine::basic::PAddress*>(
      &::top::tvm_engine::basic::_PAddress_default_instance_);
}
inline ::top::tvm_engine::basic::PAddress* PCallArgs::release_recver_address() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PCallArgs.recver_address)
  
  ::top::tvm_engine::basic::PAddress* temp = recver_address_;
  recver_address_ = NULL;
  return temp;
}
inline ::top::tvm_engine::basic::PAddress* PCallArgs::mutable_recver_address() {
  
  if (recver_address_ == NULL) {
    auto* p = CreateMaybeMessage<::top::tvm_engine::basic::PAddress>(GetArenaNoVirtual());
    recver_address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PCallArgs.recver_address)
  return recver_address_;
}
inline void PCallArgs::set_allocated_recver_address(::top::tvm_engine::basic::PAddress* recver_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recver_address_);
  }
  if (recver_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recver_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recver_address, submessage_arena);
    }
    
  } else {
    
  }
  recver_address_ = recver_address;
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PCallArgs.recver_address)
}

// uint64 value = 3;
inline void PCallArgs::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PCallArgs::value() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PCallArgs.value)
  return value_;
}
inline void PCallArgs::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PCallArgs.value)
}

// bytes input = 4;
inline void PCallArgs::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PCallArgs::input() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PCallArgs.input)
  return input_.GetNoArena();
}
inline void PCallArgs::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PCallArgs.input)
}
#if LANG_CXX11
inline void PCallArgs::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.tvm_engine.parameters.PCallArgs.input)
}
#endif
inline void PCallArgs::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.tvm_engine.parameters.PCallArgs.input)
}
inline void PCallArgs::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.tvm_engine.parameters.PCallArgs.input)
}
inline ::std::string* PCallArgs::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:top.tvm_engine.parameters.PCallArgs.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCallArgs::release_input() {
  // @@protoc_insertion_point(field_release:top.tvm_engine.parameters.PCallArgs.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCallArgs::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:top.tvm_engine.parameters.PCallArgs.input)
}

// uint64 gas_limit = 5;
inline void PCallArgs::clear_gas_limit() {
  gas_limit_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PCallArgs::gas_limit() const {
  // @@protoc_insertion_point(field_get:top.tvm_engine.parameters.PCallArgs.gas_limit)
  return gas_limit_;
}
inline void PCallArgs::set_gas_limit(::google::protobuf::uint64 value) {
  
  gas_limit_ = value;
  // @@protoc_insertion_point(field_set:top.tvm_engine.parameters.PCallArgs.gas_limit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace parameters
}  // namespace tvm_engine
}  // namespace top

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protobuf_5ftypes_2fpparameters_2eproto
